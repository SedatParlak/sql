--Select persons who still working (OUTDATE is null) in the company
SELECT
  *
FROM 
  PERSONS
WHERE
  OUTDATE IS NULL


--Select total women and men who is stil working for each department
SELECT
  DP.DEPARTMENT,
 CASE
	WHEN P.GENDER='E' THEN 'Erkek'
	WHEN P.GENDER='K' THEN 'Kadın'
 END AS GENDER,
  COUNT(DP.DEPARTMENT) AS TOTALPERSON
FROM
  PERSONS AS P
  JOIN DEPARTMENTS AS DP ON DP.ID=P.DEPARTMENTID
WHERE
  OUTDATE IS NULL
GROUP BY
  DP.DEPARTMENT,
  P.GENDER
ORDER BY
  DP.DEPARTMENT,
  P.GENDER


--Select total women and men who is stil working for each department (as column)
SELECT
  D.DEPARTMENT,
  (SELECT COUNT(*) FROM PERSONS WHERE D.ID=DEPARTMENTID AND GENDER='E' AND OUTDATE IS NULL) AS MALE,
  (SELECT COUNT(*) FROM PERSONS WHERE D.ID=DEPARTMENTID AND GENDER='K' AND OUTDATE IS NULL) AS FEMALE,
  (SELECT COUNT(*) FROM PERSONS WHERE D.ID=DEPARTMENTID AND OUTDATE IS NULL) AS TOTAL_PERSON
FROM 
  DEPARTMENTS AS D
ORDER BY 
  DEPARTMENT
 

--Select min, max and average salary for 'PLANLAMA ŞEFİ'
SELECT 
  POSITION,
  MIN(SALARY) AS MIN_SALARY,
  MAX(SALARY) AS MAX_SALARY,
  ROUND(AVG(SALARY), 0) AS AVG_SALARY
FROM 
  PERSONS AS P
  JOIN POSITIONS AS PT ON PT.ID=P.POSITIONID
GROUP BY 
  PT.POSITION
HAVING
  POSITION='PLANLAMA ŞEFİ'


--Write a query that shows total person who still working and them average salary for each position
SELECT
  PS.POSITION,
  COUNT(POSITION) AS TOTAL_PERSON,
  ROUND(AVG(SALARY), 0) AS AVG_SALARY
FROM 
  PERSONS AS P
  JOIN POSITIONS AS PS ON PS.ID=P.POSITIONID
WHERE 
  P.OUTDATE IS NULL
GROUP BY
  PS.POSITION
ORDER BY 
  PS.POSITION


--Write a query that shows total recruitment male and female for each year
SELECT
  YEAR(P.INDATE) AS YEAR_,
  (SELECT COUNT(*) FROM PERSONS WHERE GENDER='E' AND YEAR(INDATE)=YEAR(P.INDATE)) AS TOTAL_MALE,
  (SELECT COUNT(*) FROM PERSONS WHERE GENDER='K' AND YEAR(INDATE)=YEAR(P.INDATE)) AS TOTAL_FEMALE
FROM
  PERSONS AS P
GROUP BY
  YEAR(INDATE)
ORDER BY
  1


--Write the query that shows how many months each employee has worked.
SELECT 
  NAME_+' '+SURNAME,
  INDATE,
  OUTDATE,
  CASE
	WHEN OUTDATE IS NULL THEN DATEDIFF(MONTH, INDATE, GETDATE())
	WHEN OUTDATE IS NOT NULL THEN DATEDIFF(MONTH, INDATE, OUTDATE)
 END AS WORKING_TIME
FROM 
  PERSONS


--Write the query that shows total shortnames
SELECT
  LEFT(NAME_, 1) + '.' + LEFT(SURNAME, 1) AS SHORT_NAME,
  COUNT(LEFT(NAME_, 1) + '.' + LEFT(SURNAME, 1)) AS TOTAL_SHORTNAMES
FROM
  PERSONS
GROUP BY
  LEFT(NAME_, 1) + '.' + LEFT(SURNAME, 1)
ORDER BY
  TOTAL_SHORTNAMES DESC


--Write the query that shows departments ordinary salary greater than 5500
SELECT
  DEPARTMENT,
  ROUND(AVG(SALARY), 0) AS AVG_SALARY
FROM 
  PERSONS AS P
  JOIN DEPARTMENTS AS DP ON DP.ID=P.DEPARTMENTID
GROUP BY
  DP.DEPARTMENT
HAVING 
  ROUND(AVG(SALARY), 0) > 5500
ORDER BY
  AVG_SALARY DESC

--Option 2
SELECT
  DP.DEPARTMENT,
  ROUND((SELECT AVG(SALARY) FROM PERSONS WHERE DEPARTMENTID=DP.ID), 0) AS AVG_SALARY
FROM
  DEPARTMENTS AS DP
WHERE ROUND((SELECT AVG(SALARY) FROM PERSONS WHERE DEPARTMENTID=DP.ID), 0)>5500
ORDER BY
  AVG_SALARY DESC


--Write the query that captures the average seniority of the departments.
SELECT 
  DEPARTMENT, 
  AVG(WORKING_TIME) AS TOTAL_PERSON 
FROM 
  (
    SELECT 
      DP.DEPARTMENT, 
      CASE WHEN OUTDATE IS NULL THEN DATEDIFF(
        MONTH, 
        INDATE, 
        GETDATE()
      ) WHEN OUTDATE IS NOT NULL THEN DATEDIFF(MONTH, INDATE, OUTDATE) END AS WORKING_TIME 
    FROM 
      PERSONS AS P 
      JOIN DEPARTMENTS AS DP ON DP.ID = P.DEPARTMENTID
  ) AS T
GROUP BY 
  DEPARTMENT



--Write the query that shows person nanme, position, manager and manager position for each person
SELECT 
  P.NAME_ + ' ' + P.SURNAME AS PERSON,
  PS.POSITION,
  P2.NAME_ + ' ' + P2.SURNAME AS MANAGER,
  PS2.POSITION AS MANAGER_POSITION
FROM 
  PERSONS AS P
  JOIN POSITIONS AS PS ON PS.ID=P.POSITIONID
  JOIN PERSONS AS P2 ON P2.MANAGERID=P2.ID
  JOIN POSITIONS AS PS2 ON PS2.ID=P2.POSITIONID

  







  
  



